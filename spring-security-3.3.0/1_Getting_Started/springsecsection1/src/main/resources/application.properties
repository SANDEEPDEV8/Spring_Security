spring.application.name=${SPRING_APP_NAME:springsecsection1}
spring.security.user.name=${SECURITY_USERNAME:eazybytes}
spring.security.user.password=${SECURITY_PASSWORD:12345} 
# by default :  password in console with username as "user"
# source code : securityproperties.java
# spring.security package , user class, name& password property >> in source code
# all list of security props: https://docs.spring.io/spring-boot/appendix/application-properties/index.html#appendix.application-properties.security

logging.level.org.springframework.security=${SPRING_SECURITY_LOG_LEVEL:TRACE}
# prints trace, infro, debug, warn, error logs from spring security

# spring security source code >>  AuthorizationFilter.java, DefaultLoginPageGeneratingFilter.java, AbstractAuthenticationProcessingFilter.java, UsernamePasswordAuthenticationFilter.java
# AuthenticationManager.java invokers all providers, ProviderManager.java, DaoAuthenticationProvider.java (default provider) > authenticate() method, AbstractUserDetailsAuthenticationProvider.java, IMemoryUserDetailsManager.java, JdbcUserDetailsManager.java
# dofilter() method >> for every request, it will check if user is authenticated or not
# all the filter invockations are in logs

# JSESSIONID is inside browser cookies to keep track of session. so on refresh, it wont show login page

logging.pattern.console = ${LOGPATTERN_CONSOLE:%green(%d{HH:mm:ss.SSS}) %blue(%-5level) %red([%thread]) %yellow(%logger{15}) - %msg%n}

